# MCP Ephemeral Web UI Proxy Configuration
# Add these locations to the sizzek.dungeonmind.net server block
# This proxies ephemeral UIs by port via path, keeping TLS on 443

# Proxy ephemeral UIs by port via path, keep TLS on 443
# Handles: /mcp/ui/<port>/?token=...
location ~ ^/mcp/ui/(11[0-9]{3}|12[0-9]{3})/?$ {
    set $mcp_port $1;
    proxy_pass http://127.0.0.1:$mcp_port/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    
    # Add CORS headers for web UI
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
    
    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 204;
    }
}

# Handles nested asset/API routes: /mcp/ui/<port>/... and preserves query args
location ~ ^/mcp/ui/(11[0-9]{3}|12[0-9]{3})/(.*)$ {
    set $mcp_port $1;
    set $mcp_path $2;
    proxy_pass http://127.0.0.1:$mcp_port/$mcp_path$is_args$args;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    
    # Add CORS headers for web UI
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
    
    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 204;
    }
}

# Notes:
# - The regex limits ports to 11000-12000 for security
# - Everything stays on HTTPS via Nginx; ephemeral servers remain HTTP on localhost
# - Works fine with Cloudflare on 443 because there are no high-port exposures
# - CORS headers added for web UI functionality
# - Preflight request handling for OPTIONS requests
